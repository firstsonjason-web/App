rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidImageType() {
      return request.resource.contentType.matches('image/.*');
    }

    function isValidVideoType() {
      return request.resource.contentType.matches('video/.*');
    }

    function isValidFileSize() {
      return request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }

    // Profile images - users can upload/delete their own profile images
    match /profile-images/{userId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) &&
        isValidImageType() &&
        isValidFileSize();
    }

    // Post media - users can upload/delete their own post media
    match /post-media/{userId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) &&
        (isValidImageType() || isValidVideoType()) &&
        isValidFileSize();
    }

    // Default deny for all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}